// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudioSintoniaPreview.Data;

#nullable disable

namespace StudioSintoniaPreview.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20240422160759_DbContext")]
    partial class DbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PostModelTag", b =>
                {
                    b.Property<int>("PostagensPostModelId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("PostagensPostModelId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("PostModelTag");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"));

                    b.Property<int>("PostModelId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPostagem")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("UsuarioModelId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ComentarioId");

                    b.HasIndex("PostModelId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.PostModel", b =>
                {
                    b.Property<int>("PostModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostModelId"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Curtidas")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TipoPostagem")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("UsuarioModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PostModelId");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.ProfissaoModel", b =>
                {
                    b.Property<int>("ProfissaoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissaoModelId"));

                    b.Property<string>("ProfissaoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfissaoModelId");

                    b.ToTable("ProfissaoModels");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.UsuarioModel", b =>
                {
                    b.Property<int>("UsuarioModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioModelId"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioBio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UsuarioFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioProfissaoModelId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioProfissaoNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UsuarioModelId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PostModelTag", b =>
                {
                    b.HasOne("StudioSintoniaPreview.Models.PostModel", null)
                        .WithMany()
                        .HasForeignKey("PostagensPostModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudioSintoniaPreview.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.Comentario", b =>
                {
                    b.HasOne("StudioSintoniaPreview.Models.PostModel", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("PostModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.PostModel", b =>
                {
                    b.HasOne("StudioSintoniaPreview.Models.UsuarioModel", null)
                        .WithMany("Postagens")
                        .HasForeignKey("UsuarioModelId");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.PostModel", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("StudioSintoniaPreview.Models.UsuarioModel", b =>
                {
                    b.Navigation("Postagens");
                });
#pragma warning restore 612, 618
        }
    }
}
